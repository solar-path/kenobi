// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")

  // provider = "sqlite"
  // url      = "file:./dev.db"
}

model Todo {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  startDate   DateTime
  endDate     DateTime
  responsible String?
  status      String?
  // created by
  createdBy   User     @relation(fields: [userId], references: [id])
  userId      Int
}

model User {
  id        Int      @id @default(autoincrement())
  password  String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  todos     Todo[]
}

model Company {
  id            Int       @id @default(autoincrement())
  legalentity   String    @unique
  code          String    @unique
  address       String?
  headquarterID Int?
  headquarter   Company?  @relation("HeadquarterBranches", fields: [headquarterID], references: [id])
  branches      Company[] @relation("HeadquarterBranches")
  bin           String?   @unique
  Audit         Audit[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Audit {
  id                  Int       @id @default(autoincrement())
  reportTitle         String?   @unique
  reportID            String?   @unique @default(uuid())
  companyIdentifiedIn Company?  @relation(fields: [LegalEntityID], references: [id])
  LegalEntityID       Int?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  findings            Finding[]
}

model Finding {
  id                  Int      @id @default(autoincrement())
  slug                String?
  observation         String?
  recommendation      String?
  dateIdentified      String?
  deadlineToResolve   String?
  EDMS                String?
  url                 String?
  responsible         String?
  status              String?
  belongToAuditReport Audit?   @relation(fields: [AuditReportID], references: [id])
  AuditReportID       Int?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}
